abstract class PathListing extends Button {
    plexusOwner = false;
    path = false;

    cache = {};
    allowMouse = true;
}

function PathListing:__init__( plexus, path )
    if not Titanium.typeOf( plexus, "Plexus", true ) then
        return error("PathListing constructor requires a plexus instance. '"..tostring( plexus ).."' is invalid")
    end


    self.raw.width = plexus.cache.listing_display.width
    self:super()

    self.plexusOwner = plexus
    self.path = Plexus.static.cleanPath( path )

    self:cacheFileInformation()
end

function PathListing:draw( force )
    if self.changed or force then
        local bg, tc, canvas = self.active and self.activeBackgroundColour or self.backgroundColour, self.active and self.activeColour or self.colour, self.canvas

        canvas:clear( bg )
        canvas:drawTextLine( 2, 1, self.fileName, tc, bg )
        canvas.buffer[ self.plexusOwner.margin ] = { "\149", colours.grey, bg }

        self.changed = false
    end
end

function PathListing:setY( y )
    self.backgroundColour = y % 2 == 0 and 256 or 1
    self.Y = y
end

function PathListing:cacheFileInformation()
    local path = self.path
    if not fs.exists( path ) then
        return error("PathListing failed to fetch path information. Path '"..tostring( path ).."' doesn't exist")
    end

    self.fileName = fs.getName( path )
end

configureConstructor( {}, false, true )
